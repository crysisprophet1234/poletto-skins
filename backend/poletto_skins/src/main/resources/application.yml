spring:

  application:
    name: poletto_skins
    
  config:
      
    import:
      - "optional:file:./.env[.properties]"
      
  data:
    mongodb:
      uri: ${MONGODB_URI}
      
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

logging:
  file:
    name: ${LOG_FILE_PATH}
  level:
    root: ${LOG_LEVEL}
    org:
      springframework:
        web: 
          filter:
            CommonsRequestLoggingFilter: DEBUG
        http: ${LOG_LEVEL}

server:
  port: ${SERVER_PORT}
  shutdown: graceful
  servlet:
    context-path: ${SERVER_CONTEXT_PATH}
    
cors:
  allowed-origin: ${CORS_ALLOWED_ORIGIN}
  
jwt:
  secret: ${JWT_SECRET}
  timeout: ${JWT_TIMEOUT}
    
openid:
  providers:
    steam: ${OPENID_PROVIDERS_STEAM}
  return-to-url: ${OPENID_RETURN_TO_URL}
  redirect:
    login-success: ${LOGIN_SUCCESS_URL}
    login-failure: ${LOGIN_FAILURE_URL}

steam:
  api:
    url: ${STEAM_API_URL}
    key: ${STEAM_API_KEY}
  community:
    url: ${STEAM_COMMUNITY_URL}
    
steamweb:
  api:
    url: ${STEAM_WEB_API_URL}
    key: ${STEAM_WEB_API_KEY}
    
csfloat:
  api:
    url: ${CSFLOAT_API_URL}
    referer: ${CSFLOAT_API_REFERER}
    origin: ${CSFLOAT_API_ORIGIN}

management:
  endpoints:
    web:
      exposure:
        include: 
          - "metrics"
          - "health"
          - "info"
          - "caches"
  health:
    mongo:
      enabled: true